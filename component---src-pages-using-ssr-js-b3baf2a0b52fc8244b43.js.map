{"version":3,"file":"component---src-pages-using-ssr-js-b3baf2a0b52fc8244b43.js","mappings":"uKAiDA,IA7CYA,IAA6B,IAA5B,MAAEC,EAAK,YAAEC,GAAaF,EACjC,MAAM,KAAEG,IAASC,EAAAA,EAAAA,IAAe,cAa1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YAEzD,OACEK,EAAAA,cAACC,EAAAA,EAAM,CACLC,eAAgB,CACdC,KAAM,MAERT,MAAOA,EACPU,cAAe,QAAQR,EAAKG,aAAaL,QACzCW,KAAM,CACJ,CACEC,KAAM,cACNC,QAAST,GAEX,CACEU,SAAU,WACVD,QAASb,GAEX,CACEc,SAAU,iBACVD,QAAST,GAEX,CACEU,SAAU,UACVD,QAAS,aAGb,C,6GCvCN,MA4BaE,EAAOA,IAAMT,EAAAA,cAACU,EAAAA,EAAG,CAAChB,MAAM,cAErC,UA9BiBD,IAAoB,IAAnB,WAAEkB,GAAYlB,EAC9B,OACEO,EAAAA,cAACY,EAAAA,EAAM,KACLZ,EAAAA,cAAA,UAAI,gBACWA,EAAAA,cAAA,SAAG,yBAElBA,EAAAA,cAAA,SAAG,mHAE4C,IAC7CA,EAAAA,cAAA,YAAM,yCAA4C,KAEpDA,EAAAA,cAAA,OACEa,MAAO,CAAEC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKN,EAAWO,UAElBlB,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGmB,KAAK,oFAAmF,6CAEvF,KAGNnB,EAAAA,cAACoB,EAAAA,GAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ title, description }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en',\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ]}\n    />\n  )\n}\n\nexport default SEO","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["_ref","title","description","site","useStaticQuery","metaDescription","siteMetadata","React","Helmet","htmlAttributes","lang","titleTemplate","meta","name","content","property","Head","Seo","serverData","Layout","style","width","borderRadius","alt","src","message","href","Link","to"],"sourceRoot":""}